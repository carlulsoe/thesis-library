// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders correctly, no options 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <View
    onTouchMove={[Function]}
    onTouchStart={[Function]}
    style={
      {
        "alignItems": "center",
        "alignSelf": "stretch",
        "flex": 1,
        "justifyContent": "center",
      }
    }
  >
    <RNSVGSvgView
      bbHeight={1000}
      bbWidth={1000}
      focusable={false}
      height={1000}
      style={
        [
          {
            "backgroundColor": "transparent",
            "borderWidth": 0,
          },
          {
            "flex": 0,
            "height": 1000,
            "width": 1000,
          },
        ]
      }
      width={1000}
    >
      <RNSVGGroup
        fill={
          {
            "payload": 4278190080,
            "type": 0,
          }
        }
      >
        <RNSVGPath
          d=""
          fill={
            {
              "payload": 4278190080,
              "type": 0,
            }
          }
          fillOpacity={0}
          propList={
            [
              "fillOpacity",
              "stroke",
            ]
          }
          stroke={
            {
              "payload": 4294901760,
              "type": 0,
            }
          }
        />
      </RNSVGGroup>
    </RNSVGSvgView>
  </View>
  <View>
    <View
      accessibilityRole="button"
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": undefined,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "opacity": 1,
        }
      }
    >
      <View
        style={
          [
            {},
          ]
        }
      >
        <Text
          style={
            [
              {
                "color": "#007AFF",
                "fontSize": 18,
                "margin": 8,
                "textAlign": "center",
              },
            ]
          }
        >
          Clear Canvas
        </Text>
      </View>
    </View>
    <View
      accessibilityRole="button"
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": undefined,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "opacity": 1,
        }
      }
    >
      <View
        style={
          [
            {},
          ]
        }
      >
        <Text
          style={
            [
              {
                "color": "#007AFF",
                "fontSize": 18,
                "margin": 8,
                "textAlign": "center",
              },
            ]
          }
        >
          Print Path
        </Text>
      </View>
    </View>
  </View>
</View>
`;
